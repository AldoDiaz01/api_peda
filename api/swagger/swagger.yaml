swagger: "2.0"
info:
  version: "0.0.1"
  title: Pedas App
# during dev, should point to your local machine

host: mipeda.appspot.com
#host: localhost:10010

x-google-endpoints:
- name: 'mipeda.appspot.com'
#- name: 'localhost:10010'
  allowCors: 'true'
# basePath prefixes all resource paths
basePath: /api
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.
  
  
     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid user & password.
  
  
     The following syntax must be used in the 'Authorization' header :
  
         Bearer xxxxxx.yyyyyyy.zzzzzz

consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:

  /login/{role}:
    x-swagger-router-controller: main-controller
    post:
      operationId: loginPost
      description: "Login with a particular role"
      parameters:
        - name: role
          in: path
          required: true
          type: string
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

  /unprotected:
    x-swagger-router-controller: main-controller
    get:
      operationId: unprotectedGet
      description: "Unprotected endpoint"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Resource"

  /protected:
    x-swagger-router-controller: main-controller
    get:
      operationId: protectedGet
      description: "Protected endpoint, only accessible to 'admins' and 'users'"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Resource"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

  /protected2:
    x-swagger-router-controller: main-controller
    get:
      operationId: protected2Get
      description: "Protected endpoint, only accessible to 'admins'"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Resource"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

  /usuarios:
    x-swagger-router-controller: usuario.controller
    get:
      description: get the user list
      parameters:
        - name: usuario
          in: query
          type: string
          required: false
        - name: contrasena
          in: query
          type: string
          required: false
        - name: nombre
          in: query
          type: string
          required: false
        - name: edad
          in: query
          type: string
          required: false
        - name: telefono
          in: query
          type: string
          required: false
        - name: sort
          in: query
          type: string
          required: false
      operationId: getUsuario
      responses: 
        "200":
          description: success
          schema: 
            $ref: "#/definitions/GetUsuarioListResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
            
    post:
      description: Add a new user to the list
      parameters:
        - in: body
          name: usuario
          description: The user to create
          schema:
            $ref: "#/definitions/Usuario"
      operationId: createUsuario
      responses: 
        "201":
          description: success
          schema:
            $ref: "#/definitions/GetUsuarioResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
  
  /usuarios/{id}:
    x-swagger-router-controller: usuario.controller
    
    get: 
      description: Get an user
      parameters:
        - name: id
          type: string
          in: path
          required: true
      operationId: getUsuarioById
      responses:
        "200":
          description: success
          schema:
           $ref: "#/definitions/GetUsuarioResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
            
    put:
      description: Update an user
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
        - in: body
          name: usuario
          description: The user to update
          schema:
            $ref: "#/definitions/Usuario"
      operationId: updateUsuario
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsuarioResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    delete:
      description: Delete an user
      parameters:
        - name: id
          description: User id
          type: string
          in: path 
          required: true
      operationId: deleteUsuario
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /pedas:
    x-swagger-router-controller: peda.controller
    get:
      description: get the peda list
      parameters:
        - name: horario
          in: query
          type: string
          required: false
        - name: cantidad
          in: query
          type: string
          required: false
        - name: presupuesto
          in: query
          type: string
          required: false
        - name: host
          in: query
          type: number
          required: false
        - name: sort
          in: query
          type: string
          required: false
        - name: fields
          in: query  
          type: string
          required: false
      operationId: getPeda
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetPedaListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new peda to the list
      parameters:
        - in: body
          name: peda
          description: The peda to create.
          schema:
            $ref: "#/definitions/Peda"
      operationId: createPeda
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GetPedaResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /pedas/{id}:
    x-swagger-router-controller: peda.controller
    
    get:
      description: get a peda
      parameters:
        - name: id
          type: string
          in: path
          required: true
      operationId: getPedaById
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetPedaResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    put:
      description: update a peda
      parameters:
        - name: id
          description: peda id
          type: string
          in: path
          required: true
        - in: body
          name: peda
          description: The peda to update.
          schema:
            $ref: "#/definitions/Peda"
      operationId: updatePeda
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetPedaResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
            
    delete:
      description: delete a alcohol
      parameters:
        - name: id
          description: alcohol id
          type: string
          in: path
          required: true
      operationId: deletePeda
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"   
            
  /hosts:
    x-swagger-router-controller: host.controller

    get:
      description: get the host list
      parameters:
        - name: host
          in: query
          type: string
          required: false
        - name: contrasena
          in: query
          type: string
          required: false
        - name: nombre
          in: query
          type: string
          required: false
        - name: edad
          in: query
          type: string
          required: false
        - name: telefono
          in: query
          type: string
          required: false
        - name: direccion
          in: query
          type: string
          required: false
        - name: sort
          in: query
          type: string
          required: false
      operationId: getHost
      responses: 
        "200":
          description: success
          schema: 
            $ref: "#/definitions/GetHostListResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
            
    post:
      description: Add a new host to the list
      parameters:
        - in: body
          name: host
          description: The host to create
          schema:
            $ref: "#/definitions/Host"
      operationId: createHost
      responses: 
        "201":
          description: success
          schema:
            $ref: "#/definitions/GetHostResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
  
  /hosts/{id}:
    x-swagger-router-controller: host.controller
    
    get: 
      description: Get a host
      parameters:
        - name: id
          type: string
          in: path
          required: true
      operationId: getHostById
      responses:
        "200":
          description: success
          schema:
           $ref: "#/definitions/GetHostResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
            
    put:
      description: Update a host
      parameters:
        - name: id
          description: Host id
          type: string
          in: path
          required: true
        - in: body
          name: host
          description: The host to update
          schema:
            $ref: "#/definitions/Host"
      operationId: updateHost
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetHostResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    delete:
      description: Delete a host
      parameters:
        - name: id
          description: Host id
          type: string
          in: path 
          required: true
      operationId: deleteHost
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /alcoholes:
    x-swagger-router-controller: alcohol.controller

    get:
      description: get the alcohol list
      parameters:
        - name: nombre
          in: query
          type: string
          required: false
        - name: tipo
          in: query
          type: string
          required: false
        - name: sort
          in: query
          type: string
          required: false
      operationId: getAlcohol
      responses: 
        "200":
          description: success
          schema: 
            $ref: "#/definitions/GetAlcoholListResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
            
    post:
      description: Add a new alcohol to the list
      parameters:
        - in: body
          name: alcohol
          description: The alcohol to create
          schema:
            $ref: "#/definitions/Alcohol"
      operationId: createAlcohol
      responses: 
        "201":
          description: success
          schema:
            $ref: "#/definitions/GetAlcoholResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
  
  /alcoholes/{id}:
    x-swagger-router-controller: alcohol.controller
    
    get: 
      description: Get an alcohol
      parameters:
        - name: id
          type: string
          in: path
          required: true
      operationId: getAlcoholById
      responses:
        "200":
          description: success
          schema:
           $ref: "#/definitions/GetAlcoholResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
            
    put:
      description: Update an alcohol
      parameters:
        - name: id
          description: Alcohol id
          type: string
          in: path
          required: true
        - in: body
          name: alcohol
          description: The alcohol to update
          schema:
            $ref: "#/definitions/Alcohol"
      operationId: updateAlcohol
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetAlcoholResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    delete:
      description: Delete an alcohol
      parameters:
        - name: id
          description: Alcohol id
          type: string
          in: path 
          required: true
      operationId: deleteAlcohol
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /usuariopedas:
    x-swagger-router-controller: usuariopedas.controller

    get:
      description: get the usuariopedas list
      parameters:
        - name: usuario
          in: query
          type: number
          required: false
        - name: peda
          in: query
          type: number
          required: false
        - name: calificacion
          in: query
          type: string
          required: false
        - name: sort
          in: query
          type: string
          required: false
      operationId: getUsuariopedas
      responses: 
        "200":
          description: success
          schema: 
            $ref: "#/definitions/GetUsuarioPedasListResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
            
    post:
      description: Add a new usuariopedas to the list
      parameters:
        - in: body
          name: usuariopedas
          description: The usuariopedas to create
          schema:
            $ref: "#/definitions/UsuarioPedas"
      operationId: createUsuariopedas
      responses: 
        "201":
          description: success
          schema:
            $ref: "#/definitions/GetUsuarioPedasResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
  
  /usuariopedas/{id}:
    x-swagger-router-controller: usuariopedas.controller
    
    get: 
      description: Get an usuariopedas
      parameters:
        - name: id
          type: string
          in: path
          required: true
      operationId: getUsuariopedasById
      responses:
        "200":
          description: success
          schema:
           $ref: "#/definitions/GetUsuarioPedasResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
            
    put:
      description: Update an usuariopedas
      parameters:
        - name: id
          description: Usuariopedas id
          type: string
          in: path
          required: true
        - in: body
          name: usuariopedas
          description: The usuariopedas to update
          schema:
            $ref: "#/definitions/UsuarioPedas"
      operationId: updateUsuariopedas
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsuarioPedasResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    delete:
      description: Delete an usuariopedas
      parameters:
        - name: id
          description: Usuariopedas id
          type: string
          in: path 
          required: true
      operationId: deleteUsuariopedas
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /hostpedas:
    x-swagger-router-controller: hostpedas.controller

    get:
      description: get the hostpedas list
      parameters:
        - name: host
          in: query
          type: number
          required: false
        - name: peda
          in: query
          type: number
          required: false
        - name: calificacion
          in: query
          type: string
          required: false
        - name: sort
          in: query
          type: string
          required: false
      operationId: getHostpedas
      responses: 
        "200":
          description: success
          schema: 
            $ref: "#/definitions/GetHostPedasListResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
            
    post:
      description: Add a new hostpedas to the list
      parameters:
        - in: body
          name: hostpedas
          description: The hostpedas to create
          schema:
            $ref: "#/definitions/HostPedas"
      operationId: createHostpedas
      responses: 
        "201":
          description: success
          schema:
            $ref: "#/definitions/GetHostPedasResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
  
  /hostpedas/{id}:
    x-swagger-router-controller: hostpedas.controller
    
    get: 
      description: Get a hostpedas
      parameters:
        - name: id
          type: string
          in: path
          required: true
      operationId: getHostpedasById
      responses:
        "200":
          description: success
          schema:
           $ref: "#/definitions/GetHostPedasResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
            
    put:
      description: Update a hostpedas
      parameters:
        - name: id
          description: Hostpedas id
          type: string
          in: path
          required: true
        - in: body
          name: hostpedas
          description: The hostpedas to update
          schema:
            $ref: "#/definitions/HostPedas"
      operationId: updateHostpedas
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetHostPedasResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    delete:
      description: Delete a hostpedas
      parameters:
        - name: id
          description: Hostpedas id
          type: string
          in: path 
          required: true
      operationId: deleteHostpedas
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw
    
# complex objects have schema definitions
definitions:
      
  Usuario:
    type: object
    properties:
      usuario:
        type: string
        description: User of the user
      contrasena:
        type: string
        description: Password of the user
      nombre:
        type: string
        description: Name of the user
      edad:
        type: string
        description: Age of the user
      telefono:
        type: string
        description: Phone of the user
      image:
        type: string
        format: byte
    required:
      - usuario
      - contrasena
      - nombre
      - edad
      - telefono
    
  GetUsuarioResponse:
    type: object
    properties:
      id:
        type: number
        description: identifier
      usuario:
        type: string
        description: User of the user
      contrasena:
        type: string
        description: Password of the user
      nombre:
        type: string
        description: Name of the user
      edad:
        type: string
        description: Age of the user
      telefono:
        type: string
        description: Phone of the user
      image:
        type: string
        format: byte
    required:
      - id
      - usuario
      - contrasena
      - nombre
      - edad
      - telefono
      
  GetUsuarioListResponse:
    required: 
      - usuarios
    properties: 
      usuarios:
        type: array
        items:
          $ref: "#/definitions/GetUsuarioResponse"

  Peda:
    type: object
    properties:
      horario:
        type: string
        description: Datetime of the peda
      cantidad:
        type: string
        description: Amount of assitance of the peda
      presupuesto:
        type: string
        description: Budget of the peda
      host:
        type: number
        description: Host of the peda
      image:
        type: string
        format: byte
    required:
      - horario
      - cantidad
      - presupuesto
      - host
      
  GetPedaResponse:
    type: object
    properties:
      id:
        type: number
        description: identifier
      horario:
        type: string
        description: Datetime of the peda
      cantidad:
        type: string
        description: Amount of assitance of the peda
      presupuesto:
        type: string
        description: Budget of the peda
      host:
        type: number
        description: Host of the peda
      image:
        type: string
        format: byte
    required:
      - id
      - horario
      - cantidad
      - presupuesto
      - host
      
  GetPedaListResponse:
    required:
      - pedas
    properties:
      pedas:
        type: array
        items:
          $ref: "#/definitions/GetPedaResponse"  

  Host:
    type: object
    properties:
      usuario:
        type: string
        description: Name of the user of the host
      contrasena:
        type: string
        description: Password of the host
      nombre:
        type: string
        description: Name of the host
      edad:
        type: string
        description: Age of the host
      telefono:
        type: string
        description: Phone of the host
      direccion:
        type: string
        description: Address of the host
      image:
        type: string
        format: byte
    required:
      - usuario
      - contrasena
      - nombre
      - edad
      - telefono
      - direccion
    
  GetHostResponse:
    type: object
    properties:
      id:
        type: number
        description: identifier
      usuario:
        type: string
        description: User of the host
      contrasena:
        type: string
        description: Password of the host
      nombre:
        type: string
        description: Name of the host
      edad:
        type: string
        description: Age of the host
      telefono:
        type: string
        description: Phone of the host
      direccion:
        type: string
        description: Address of the host
      image:
        type: string
        format: byte
    required:
      - id
      - usuario
      - contrasena
      - nombre
      - edad
      - telefono
      - direccion

  GetHostListResponse:
    required: 
      - hosts
    properties: 
      hosts:
        type: array
        items:
          $ref: "#/definitions/GetHostResponse"
  
  Alcohol:
    type: object
    properties:
      nombre:
        type: string
        description: Name of the alcohol
      tipo:
        type: string
        description: Type of the alcohol
      image:
        type: string
        format: byte
    required:
      - nombre
      - tipo
    
  GetAlcoholResponse:
    type: object
    properties:
      id:
        type: number
        description: identifier
      nombre:
        type: string
        description: Name of the alcohol
      tipo:
        type: string
        description: Type of the alcohol
      image:
        type: string
        format: byte
    required:
      - id
      - nombre
      - tipo
      
  GetAlcoholListResponse:
    required: 
      - alcoholes
    properties: 
      alcoholes:
        type: array
        items:
          $ref: "#/definitions/GetAlcoholResponse"

  UsuarioPedas:
    type: object
    properties:
      usuario:
        type: number
        description: usuario
      peda:
        type: number
        description: peda
      calificacion:
        type: string
        description: calificacion
      image:
        type: string
        format: byte
    required:
      - usuario
      - peda
      - calificacion
    
  GetUsuarioPedasResponse:
    type: object
    properties:
      id:
        type: number
        description: identifier
      usuario:
        type: number
        description: usuario
      peda:
        type: number
        description: peda
      calificacion:
        type: string
        description: calificacion
      image:
        type: string
        format: byte
    required:
      - id
      - usuario
      - peda
      - calificacion
      
  GetUsuarioPedasListResponse:
    required: 
      - usuariopedas
    properties: 
      usuariopedas:
        type: array
        items:
          $ref: "#/definitions/GetUsuarioPedasResponse"

  HostPedas:
    type: object
    properties:
      host:
        type: number
        description: host
      peda:
        type: number
        description: peda
      calificacion:
        type: string
        description: calificacion
      image:
        type: string
        format: byte
    required:
      - host
      - peda
      - calificacion
    
  GetHostPedasResponse:
    type: object
    properties:
      id:
        type: number
        description: identifier
      host:
        type: number
        description: host
      peda:
        type: number
        description: peda
      calificacion:
        type: string
        description: calificacion
      image:
        type: string
        format: byte
    required:
      - id
      - host
      - peda
      - calificacion
      
  GetHostPedasListResponse:
    required: 
      - hostpedas
    properties: 
      hostpedas:
        type: array
        items:
          $ref: "#/definitions/GetHostPedasResponse"

  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: Returns 1 if successful
      description:
        type: string
        description: A short comment
    required:
      - success
      - description
  
  Authentication:
    type: object
    properties:
      username:
        type: string
        example: "username"
      password:
        type: string
        example: "password"

  Resource:
    type: object
    properties:
      resource:
        type: string

  Token:
    type: object
    properties:
      token:
        type: string
        
  Error:
    type: object
    properties:
      message:
        type: string
        
  ErrorResponse:
    required:
      - message
    properties:
      code:
        type: number
      message:
        type: string
      description:
        type: string
